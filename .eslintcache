[{"/Users/w/Projects/React/wrg_v2/src/components/PostsView.tsx":"1","/Users/w/Projects/React/wrg_v2/src/MiddleHolder.tsx":"2","/Users/w/Projects/React/wrg_v2/src/pages/ViewPost.tsx":"3","/Users/w/Projects/React/wrg_v2/src/templates/Comments.tsx":"4","/Users/w/Projects/React/wrg_v2/src/components/BackBtn.tsx":"5","/Users/w/Projects/React/wrg_v2/src/data-layer/api/Queries.tsx":"6","/Users/w/Projects/React/wrg_v2/src/templates/Category.tsx":"7","/Users/w/Projects/React/wrg_v2/src/components/Typography.tsx":"8","/Users/w/Projects/React/wrg_v2/src/components/CommentBox.tsx":"9","/Users/w/Projects/React/wrg_v2/src/App.tsx":"10","/Users/w/Projects/React/wrg_v2/src/components/Header.tsx":"11","/Users/w/Projects/React/wrg_v2/src/pages/Home.tsx":"12","/Users/w/Projects/React/wrg_v2/src/data-layer/store/ui_manager.tsx":"13","/Users/w/Projects/React/wrg_v2/src/data-layer/data.tsx":"14","/Users/w/Projects/React/wrg_v2/src/helpers/Time_helper.tsx":"15","/Users/w/Projects/React/wrg_v2/src/components/Footer.tsx":"16","/Users/w/Projects/React/wrg_v2/src/pages/CreatePost.tsx":"17","/Users/w/Projects/React/wrg_v2/src/pages/Categories.tsx":"18","/Users/w/Projects/React/wrg_v2/src/index.tsx":"19","/Users/w/Projects/React/wrg_v2/src/components/FormControler.tsx":"20","/Users/w/Projects/React/wrg_v2/src/pages/auth/AuthPage.tsx":"21","/Users/w/Projects/React/wrg_v2/src/pages/auth/Login.tsx":"22","/Users/w/Projects/React/wrg_v2/src/pages/auth/Register.tsx":"23","/Users/w/Projects/React/wrg_v2/src/data-layer/store/data_manager.tsx":"24","/Users/w/Projects/React/wrg_v2/src/pages/Profile.tsx":"25"},{"size":3675,"mtime":1612639126198,"results":"26","hashOfConfig":"27"},{"size":1952,"mtime":1612639055856,"results":"28","hashOfConfig":"27"},{"size":4905,"mtime":1609834345721,"results":"29","hashOfConfig":"27"},{"size":2205,"mtime":1609824447206,"results":"30","hashOfConfig":"27"},{"size":353,"mtime":1609655821533,"results":"31","hashOfConfig":"27"},{"size":1698,"mtime":1610338409965,"results":"32","hashOfConfig":"27"},{"size":1842,"mtime":1609701229258,"results":"33","hashOfConfig":"27"},{"size":1223,"mtime":1609695940115,"results":"34","hashOfConfig":"27"},{"size":2066,"mtime":1609835335096,"results":"35","hashOfConfig":"27"},{"size":1735,"mtime":1609889890505,"results":"36","hashOfConfig":"27"},{"size":1894,"mtime":1613361998441,"results":"37","hashOfConfig":"27"},{"size":185,"mtime":1609221169591,"results":"38","hashOfConfig":"27"},{"size":481,"mtime":1609563123025,"results":"39","hashOfConfig":"27"},{"size":11132,"mtime":1609558994096,"results":"40","hashOfConfig":"27"},{"size":117,"mtime":1609730865320,"results":"41","hashOfConfig":"27"},{"size":327,"mtime":1609556143292,"results":"42","hashOfConfig":"27"},{"size":6722,"mtime":1609877182170,"results":"43","hashOfConfig":"27"},{"size":1291,"mtime":1609877832130,"results":"44","hashOfConfig":"27"},{"size":500,"mtime":1609050224745,"results":"45","hashOfConfig":"27"},{"size":606,"mtime":1609619463756,"results":"46","hashOfConfig":"27"},{"size":889,"mtime":1612639557049,"results":"47","hashOfConfig":"27"},{"size":2827,"mtime":1612643442959,"results":"48","hashOfConfig":"27"},{"size":3711,"mtime":1610337116893,"results":"49","hashOfConfig":"27"},{"size":363,"mtime":1610339675976,"results":"50","hashOfConfig":"27"},{"size":3665,"mtime":1613370664308,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"zqwesu",{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"55"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"55"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/w/Projects/React/wrg_v2/src/components/PostsView.tsx",["118","119","120","121"],"import { useQuery } from '@apollo/client'\nimport { Button, Dropdown, List, Menu } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport React, { useEffect } from 'react'\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { POSTSBY } from '../data-layer/api/Queries'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport { useHistory } from 'react-router-dom';\nimport Link from 'antd/lib/typography/Link';\nimport { HintText } from './Typography';\ndayjs.extend(relativeTime);\n\nfunction PostsView({ cat, sub }: { cat: string, sub: string }) {\n  const { loading, data, error, refetch, client, } = useQuery(POSTSBY, {\n    partialRefetch: true,\n    variables: { c: cat, s: sub }\n  })\n\n\n\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\n          1st menu item\n            </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">\n          2nd menu item\n            </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.tmall.com/\">\n          3rd menu item\n            </a>\n      </Menu.Item>\n    </Menu>\n  );\n\n\n  const DropdownMenu = () => (\n    <Dropdown key=\"more\" overlay={menu}>\n      <Button\n        style={{\n          border: 'none',\n          padding: 0,\n        }}\n      >\n        ...\n          </Button>\n    </Dropdown>\n  );\n\n\n  const history = useHistory()\n  const navigate = (item: any) => {\n    history.push(`/view-post/${item[\"id\"]}`, { post: item });\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col md={9}>\n        <List\n        style={{ padding: 10 }}\n        loading={loading}\n        dataSource={data ? data.posts : []}\n        grid={{ gutter: 20, xs: 1, sm: 1, md: 1, xl: 1, xxl: 1 }}\n        renderItem={(item: any, index) => {\n          return <List.Item>\n            <Card className=\"post-card\" >\n\n              <Row>\n                <Col md={8} style={{ textAlign: \"start\", padding: 0, fontSize: \"1.1rem\" }}>\n                  <Link onClick={() => navigate(item)}>\n                    {item.title}\n                  </Link>\n                </Col>\n                <Col style={{ textAlign: \"end\", padding: 0 }}>\n                  <Row>\n                    <Col>{item[\"comments\"].length} c</Col>\n                    <Col>{item[\"views\"]} v</Col>\n                    <Col><DropdownMenu /></Col>\n                  </Row>\n                </Col>\n              </Row>\n              <Row style={{ height: 5 }}></Row>\n              <Row>\n                <Col md={12}>\n                  <Row><HintText>{dayjs(item[\"createdAt\"]).fromNow()}</HintText></Row>\n                  <br />\n                  <Row >\n                    <Paragraph ellipsis={{ rows: 1, expandable: false, symbol: 'show more' }}>\n                      {item[\"content\"]}\n                    </Paragraph>\n                  </Row>\n                  <hr />\n                </Col>\n                <Col>\n                  <Row>\n\n                    <Col><HintText>   {item[\"year\"]} </HintText></Col>\n\n                    <Col><HintText>  {item[\"make\"]}  </HintText></Col>\n\n                    <Col><HintText>   {item[\"model\"]} </HintText></Col>\n\n                    <Col><HintText>  {item[\"category\"]}  </HintText></Col>\n\n                    <Col><HintText>   {item[\"sub_category\"]} </HintText></Col>\n\n                  </Row>\n                </Col>\n              </Row>\n\n            </Card>\n          </List.Item>\n        }}\n      />\n      </Col>\n      <Col md={3}>\n      </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default PostsView\n",["122","123"],"/Users/w/Projects/React/wrg_v2/src/MiddleHolder.tsx",["124","125","126","127"],"import { Drawer } from 'antd'\nimport { observer } from 'mobx-react'\nimport React, { useEffect, useState } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport { Route, Switch } from 'react-router-dom'\nimport ui_manager from './data-layer/store/ui_manager'\nimport AuthPage from './pages/auth/AuthPage'\nimport Categories from './pages/Categories'\nimport CreatePost from './pages/CreatePost'\nimport Home from './pages/Home'\nimport ViewPost from './pages/ViewPost'\nimport Category from './templates/Category'\n\n\nconst MiddleHolder = observer(()  =>{\n\n    const [num, setnum] = useState<number>(0)\n\n    useEffect(() => {\n        \n       console.log(ui_manager.drawerVisible, \"ui\");\n       \n    }, [ui_manager.drawerVisible])\n    return (\n        <Container style={{overflowX:\"hidden\", overflowY:\"visible\"}}>\n        <Row>\n          {/* <Col md={2}></Col> */}\n          <Col>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/auth\" component={AuthPage} />\n              <Route exact path=\"/categories\" component={Categories} />\n              <Route exact path=\"/category\" component={Category} />\n              <Route exact path=\"/create-post\" component={CreatePost} />\n              <Route exact path=\"/view-post/:postId\" component={ViewPost} />\n            </Switch>\n        {/* <Drawer \n        className=\"drawer\"\n        visible={ui_manager.drawerVisible}\n        drawerStyle={{\n            backgroundColor : \"var(--pastel-bg)\"\n        }}\n        onClose={()=>{\n            ui_manager.drawerVisible= false\n            setnum(10);\n        }}\n        placement=\"right\"\n          closable={true}\n          getContainer={false}\n          style={{ position: 'absolute' }}\n          width={\"100%\"}\n          destroyOnClose\n        >\n          {ui_manager.drawerNode}\n        </Drawer> */}\n          </Col>\n        </Row>\n        </Container>\n    )\n})\n\nexport default MiddleHolder\n","/Users/w/Projects/React/wrg_v2/src/pages/ViewPost.tsx",["128","129","130"],"import { useMutation } from '@apollo/client'\nimport Paragraph from 'antd/lib/typography/Paragraph'\nimport dayjs from 'dayjs'\nimport React, { useEffect, useState } from 'react'\nimport { Card, Col, Container, Row } from 'react-bootstrap'\nimport DropdownMenu from 'react-bootstrap/esm/DropdownMenu'\nimport { useLocation, useParams } from 'react-router-dom'\nimport BackBtn from '../components/BackBtn'\nimport BreadCrumbs from '../components/BreadCrumb'\nimport CommentBox from '../components/CommentBox'\nimport { HintText } from '../components/Typography'\nimport { GET_POST, UPDATE_POST } from '../data-layer/api/Queries'\nimport Comments from '../templates/Comments'\n\nconst ViewPost = () => {\n    const location = useLocation<any>()\n    const params: any = useParams()\n    const item = location.state[\"post\"];\n    const {postId} = params;\n\n    const [isCommentVisible, setisCommentVisible] = useState(false)\n    const [isOffer, setisOffer] = useState(false)\n    \n    const [operation, options] = useMutation(UPDATE_POST, {\n        refetchQueries: [{\n            query : GET_POST,\n            variables : {id : postId}\n        }]\n    })\n    \n    const updatePst = () =>{\n        let currentViews = item[\"views\"] || 0;\n        currentViews++\n        \n        operation({\n            variables : {views : currentViews, id : postId}\n        }).then(res=>{\n            console.log(res);\n            \n        })\n    }\n\n    useEffect(() => {\n        if(item){\n            updatePst();\n        }\n    }, [item])\n    \n    \n    if(!item) return <div />\n    else return (\n            <div>\n                <Row>\n\n                </Row>\n                <Row>\n                    <BackBtn />\n                </Row>\n                <Row>\n                    <Col md={7} style={{ padding: 10 }}>\n\n                        <Card className=\"post-card\">\n                            <Row>\n\n                                <Col><HintText>   {item[\"year\"]} </HintText></Col>\n\n                                <Col><HintText>  {item[\"make\"]}  </HintText></Col>\n\n                                <Col><HintText>   {item[\"model\"]} </HintText></Col>\n\n                                <Col><HintText>  {item[\"category\"]}  </HintText></Col>\n\n                                <Col><HintText>   {item[\"sub_category\"]} </HintText></Col>\n\n                            </Row>\n                            <hr />\n                            <Container>\n                                <Row>\n                                    <Col md={9} style={{ textAlign: \"start\", padding: 0, fontSize: \"1.1rem\" }}>\n                                        {item.title}\n                                    </Col>\n                                    <Col style={{ textAlign: \"end\", padding: 0 }}><DropdownMenu /></Col>\n                                </Row>\n                                <Row style={{ height: 5 }}></Row>\n                                <Row>\n                                    <Col>\n                                        <Row>{dayjs(item[\"createdAt\"]).fromNow()}</Row>\n                                        <br />\n                                        <Row >\n                                            <Paragraph ellipsis={{ rows: 5, expandable: true, symbol: 'show more' }}>\n                                                <div dangerouslySetInnerHTML={{ __html: item[\"content\"] }} />\n                                            </Paragraph>\n                                        </Row>\n                                    </Col>\n\n                                </Row>\n                                <hr />\n                                <Row>\n                                    <Col><div className=\" btn outline\">watch</div></Col>\n                                    <Col><div onClick={() =>{\n                                        setisCommentVisible(true)\n                                        setisOffer(true)\n                                    }} className=\" btn outline\">offer help</div></Col>\n                                    <Col><div onClick={() => {\n                                        setisCommentVisible(true)\n                                        setisOffer(false)\n                                    }}  className=\" btn outline\">comment</div></Col>\n\n                                </Row>\n\n                              \n\n                            </Container>\n                        </Card>\n\n                        <Container style={{padding: 0, marginTop:25}}>\n                                    <CommentBox isOffer={isOffer} id={item[\"id\"]} visable={isCommentVisible} setVisible={setisCommentVisible} />\n                            </Container>\n\n                    </Col>\n                    <Col style={{ paddingTop: 10 }}>\n                        <Comments id={params[\"postId\"]} />\n                    </Col>\n                </Row>\n            </div>\n        )\n    \n}\n\nexport default ViewPost\n",["131","132"],"/Users/w/Projects/React/wrg_v2/src/templates/Comments.tsx",["133"],"/Users/w/Projects/React/wrg_v2/src/components/BackBtn.tsx",["134"],"import React from 'react'\nimport { Row } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom'\n\nconst BackBtn = () => {\n    const history = useHistory()\n\n    const handlePress = () => history.goBack();\n    return (\n        <div className=\"post-card\" onClick={handlePress}>\n            back\n        </div>\n    )\n}\n\nexport default BackBtn\n",["135","136"],"/Users/w/Projects/React/wrg_v2/src/data-layer/api/Queries.tsx",["137"],"import { gql } from '@apollo/client';\nimport Posts from '../../models/Posts';\n\nexport const CATEGORIES = gql`\nquery GetCategories{\n    categories{\n      title\n      sub\n    }\n  }\n`;\n\n\nexport const GET_COMMENTS = gql`\nquery GetComments($id:String){\n  comments(where : {post : {_id : $id}} ){\n    content\n    createdAt\n    isOffer\n  }\n}\n`\n\nexport const POSTSBY =  gql`\nquery getPosts($c:String, $s:String){\n    posts(where:{category : $c, sub_category:$s }){\n        title\n        category\n        createdAt\n        published_at\n        make\n        model\n        category\n        sub_category\n        id\n        content\n        year\n        views\n        comments{\n          id\n        }\n    }\n  }\n`;\n\nexport const GET_POST = gql`\n  query getPost($id : ID!){\n    post(id : $id){\n      views\n    }\n  }\n`\n\nexport const UPDATE_POST = gql`\n  mutation operation( $id : ID!, $views : Int){\n    updatePost(input:{where:{id:$id}, data:{views:$views}}){\n      post{\n          views\n          id\n        }\n    }\n  }\n`\n\nexport const CREATE_POST = gql`\nmutation CreatePost($post: PostInput){\n  createPost(input:{data: $post}){\n    post{\n      title\n      id\n    }\n  }\n}\n`\n\nexport const CREATE_COMMENT = gql`\n  mutation CreateComment($comment : CommentInput){\n    createComment(input:{data:$comment}){\n      comment{\n        content\n        id\n      }\n    }\n  }\n`\n\nexport const REGISTER = gql`\n  mutation register($data : UsersPermissionsRegisterInput!){\n    register(input: $data){\n      jwt\n      user{\n        id\n        username\n      }\n    }\n  }\n`\n\nexport const LOGIN = gql`\n  mutation login($data: UsersPermissionsLoginInput!){\n    login(input: $data){\n      jwt\n      user{\n        id\n      }\n    }\n  }\n`\n","/Users/w/Projects/React/wrg_v2/src/templates/Category.tsx",["138","139","140","141","142","143"],"import { useQuery } from '@apollo/client';\nimport { Divider, List } from 'antd';\nimport { observer } from 'mobx-react';\nimport React, { useEffect, useState } from 'react'\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { useHistory, useLocation } from 'react-router-dom'\nimport PostsView from '../components/PostsView';\nimport { Headliner } from '../components/Typography';\n\nfunction Category() {\n    const location = useLocation<any>();\n    const [selected, setSelected] = useState<number>(0)\n    const {title, sub, cat} = location.state;   \n    const history = useHistory(); \n\n    const onPress = (index:number) =>{\n        setSelected(index)\n    }\n\n    const openDrawer = () =>{\n        // ui_manager.drawerNode = <CreatePost />\n        // console.log(ui_manager.drawerVisible)\n        // ui_manager.drawerVisible = true;\n        // console.log(ui_manager.drawerVisible)\n\n        history.push(\"/create-post\")\n    }\n    \n    return (\n        <>\n         <Row style={{ display:\"flex\", alignItems:\"center\", justifyContent:\"flex-end\"}}>\n        <Headliner>{location.state[\"title\"]}</Headliner>        \n        <Col style={{ display:\"flex\", alignItems:\"center\", justifyContent:\"flex-end\", marginTop:20}}>\n            <div className=\"btn\" onClick={openDrawer}>\n                + add new\n            </div>\n        </Col>\n        </Row>\n        <Divider />\n  \n         <div className=\"chips-holder\" style={{overflowX:\"scroll\"}}>\n        {[\"Any\", ...location.state[\"sub\"]].map((item:string,index:number)=>{\n            const isSelected = index == selected\n            return <div onClick={()=>onPress(index)} className={isSelected? \"chips-selected chips\" : \"chips\"}>{item}</div>\n        })}\n        </div> \n        <Divider />\n        <PostsView cat={cat} sub={sub[selected-1]} />\n        </>\n    )\n}\n\nexport default observer(Category)\n",["144","145"],"/Users/w/Projects/React/wrg_v2/src/components/Typography.tsx",["146"],"import { Children, PureComponent } from \"react\"\nimport { Col, Row } from \"react-bootstrap\"\nimport '../assets/css/typography.css'\n\nexport class Headliner extends PureComponent{\n\n    render(){\n        return (\n                <Col style={{textAlign:\"start\"}}>\n                <div className=\"headliner\">{this.props.children}</div>\n                </Col>\n        )\n    }\n}\n\nexport class Cardliner extends PureComponent{\n\n    render(){\n        return (\n            <Row>\n                <Col style={{textAlign:\"start\", marginTop:10}}>\n                <div className=\"card-text\">{this.props.children}</div>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport class InputPromptText extends PureComponent{\n    render(){\n        return (\n            <Row>\n                <Col style={{textAlign:\"start\"}}>\n                <div className=\"input-text\">{this.props.children}</div>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport class HintText extends PureComponent{\n    render(){\n        return (\n            <Row>\n                <Col style={{textAlign:\"start\"}}>\n                <div className=\"hint-text\">{this.props.children}</div>\n                </Col>\n            </Row>\n        )\n    }\n}\n\n","/Users/w/Projects/React/wrg_v2/src/components/CommentBox.tsx",["147","148"],"/Users/w/Projects/React/wrg_v2/src/App.tsx",["149","150","151","152","153","154","155","156","157","158"],"/Users/w/Projects/React/wrg_v2/src/components/Header.tsx",["159","160","161","162","163","164","165","166"],"/Users/w/Projects/React/wrg_v2/src/pages/Home.tsx",[],"/Users/w/Projects/React/wrg_v2/src/data-layer/store/ui_manager.tsx",[],"/Users/w/Projects/React/wrg_v2/src/data-layer/data.tsx",[],["167","168"],"/Users/w/Projects/React/wrg_v2/src/helpers/Time_helper.tsx",[],"/Users/w/Projects/React/wrg_v2/src/components/Footer.tsx",[],"/Users/w/Projects/React/wrg_v2/src/pages/CreatePost.tsx",["169","170","171","172","173","174","175","176","177","178","179","180"],"import { useMutation, useQuery } from '@apollo/client'\nimport { Input, Cascader, DatePicker, Divider } from 'antd'\nimport React, { useMemo, useState } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { useForm } from 'react-hook-form'\nimport FormControler from '../components/FormControler'\nimport { Headliner, InputPromptText } from '../components/Typography'\nimport { CATEGORIES, CREATE_POST } from '../data-layer/api/Queries'\nimport { Cars } from '../data-layer/data'\nimport Posts from '../models/Posts'\nimport dayjs from 'dayjs'\n\n\n\nconst CreatePost = () => {\n\n    const {loading, error, data} = useQuery(CATEGORIES)\n\n    const {errors, control, handleSubmit, setValue, getValues} = useForm<{\n        title:string\n        mm:string[]\n        cs:string[]\n        year : string\n    }>()\n\n    const [createPost, mutationOptions] = useMutation(CREATE_POST)\n\n    const submit = (data:any) =>{\n\n    const {loading, error} = mutationOptions\n\n        const post1 :Posts = {\n            title : data[\"title\"],\n            category : data[\"cs\"][0],\n            sub_category : data[\"cs\"][1],\n            make : data[\"mm\"][0],\n            model : data[\"mm\"][1],\n            year : dayjs(data[\"year\"]).toDate().getFullYear(),\n            content: data[\"content\"]\n        }\n\n        let post = {post :post1}        \n        createPost({variables :post}).then(res =>{\n            console.log(res);\n            \n        })\n        \n    }\n\n    const categoryOptions = () => {\n            if(!data && !loading) return [[]]\n            const cat : any[] = data[\"categories\"];\n            const arr = cat.map((array, index) => {\n                const title : string = array[\"title\"];\n                const subs : string[] = array[\"sub\"] || []                \n                return {\n                    value: title,\n                    label: title,\n                    index: index,\n                    children: subs.map((val, idx) => {\n                        if (idx == 0) return {value: val, label: \" all\", index: idx}\n                        return {value: val, label: val, index: idx}\n                    }),\n                }\n            });\n \n            return [arr];            \n        \n    }\n\n    const carOptions = [\n        Cars().map((array, index) => {\n            return {\n                value: array[0],\n                label: array[0],\n                index: index,\n                children: array.map((val, idx) => {\n                    if (idx == 0) return { value: val, label: \" any\", index: idx }\n                    return { value: val, label: val, index: idx }\n                }),\n            }\n        }),\n\n    ]\n\n    return (\n        <div>\n            <Row style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", width: \"100%\" }}>\n                <Headliner>create post</Headliner>\n            </Row>\n            <Row >\n                <Col md={8} className=\"create-post-container\" >\n                    <Row>\n                        <Col><InputPromptText>title</InputPromptText></Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <FormControler  \n                        child={ <Input className=\"inputs\" bordered={false} placeholder=\"title of post\" />}\n                        control={control}\n                        name=\"title\"\n                        />\n                        \n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col><InputPromptText>content</InputPromptText></Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <FormControler  \n                        child={   <Input.TextArea autoSize={{ minRows: 4, maxRows: 10 }} className=\"inputs\" bordered={false} placeholder=\"content of post...\" />}\n                        control={control}\n                        name=\"content\"\n                        />\n                        </Col>\n                    </Row>\n\n\n                    <Row>\n                        <Col><InputPromptText>make & model</InputPromptText></Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                        \n                        <FormControler  \n                        child={    <Cascader expandTrigger=\"click\"\n                        options={carOptions[0]}\n                        // value={[make, model]}\n                        className=\"inputs\" bordered={false} placeholder=\"title of post\" />}\n                        control={control}\n                        name=\"mm\"\n                        />\n\n\n                      \n                            \n                            \n                            </Col>\n                    </Row>\n\n                    <Row>\n                        <Col><InputPromptText>category & subcategory</InputPromptText></Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                        <FormControler  \n                        child={    <Cascader expandTrigger=\"click\"\n                        options={categoryOptions()[0]}\n                        // value={[make, model]}\n                        className=\"inputs\" bordered={false} placeholder=\"title of post\" />}\n                        control={control}\n                        name=\"cs\"\n                        />\n\n                    \n                                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col><InputPromptText>year</InputPromptText></Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <div className=\"inputs\" style={{ display: \"flex\" }}>\n                            <FormControler  \n                        child={                                   <DatePicker style={{ display: \"flex\", width: \"100%\" }} bordered={false} picker=\"year\" placeholder=\"year of vehicle...\" />\n                    }\n                        control={control}\n                        name=\"year\"\n                        />\n\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row style={{ marginTop: 35 }}>\n                        <Col md={6} ><div className=\"btn outline\">  cancel  </div></Col>\n                        <Col md={6} ><div className=\"btn\" onClick={()=> handleSubmit(submit)()}>  post  </div></Col>\n                    </Row>\n                </Col>\n\n                <Col md={4} className=\"\" >\n                    probably some ads over here or free offers\n                </Col>\n            </Row>\n\n\n        </div>\n    )\n}\n\nexport default CreatePost\n","/Users/w/Projects/React/wrg_v2/src/pages/Categories.tsx",["181","182","183","184","185","186","187"],"import { useQuery } from '@apollo/client'\nimport { Divider, List } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { Headliner, Cardliner } from '../components/Typography'\nimport api from '../data-layer/api/API_V1'\nimport { CATEGORIES } from '../data-layer/api/Queries'\n\nfunction Categories() {\n\n    const {loading, error, data} = useQuery(CATEGORIES)\n    const history = useHistory();\n\n    const handleClick = (item:any, index:number) =>{\n        history.push(\"/category\",  {title:item[\"title\"], sub : item[\"sub\"], cat:item[\"title\"]});\n    }\n\n\n    return (\n        <>\n        <Headliner>categories</Headliner>        \n        <Divider />\n        <List  \n            dataSource={data? data[\"categories\"] : []}\n            loading={loading}\n            grid={{gutter:20, md:3, xs:3, sm:3, lg:3, xl:4, xxl:5}}\n            renderItem={(item : any, index)=>{                \n                return <List.Item>\n                    <div onClick={() => handleClick(item, index) } className=\"category-card\">\n                        <div>{item[\"title\"]}</div>\n                    </div>\n                </List.Item>\n            }}\n        />\n        </>\n    )\n}\n\nexport default Categories\n","/Users/w/Projects/React/wrg_v2/src/index.tsx",[],"/Users/w/Projects/React/wrg_v2/src/components/FormControler.tsx",["188","189","190"],"/Users/w/Projects/React/wrg_v2/src/pages/auth/AuthPage.tsx",["191","192","193","194","195"],"/Users/w/Projects/React/wrg_v2/src/pages/auth/Login.tsx",["196","197","198","199","200"],"import { useMutation } from '@apollo/client'\nimport { Input, message, Space } from 'antd'\nimport { observer } from 'mobx-react'\nimport React, { useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { useForm } from 'react-hook-form'\nimport FormControler from '../../components/FormControler'\nimport { Headliner } from '../../components/Typography'\nimport { LOGIN } from '../../data-layer/api/Queries'\nimport data_store from '../../data-layer/store/data_manager'\n\ninterface FormProps{\n    username:string\n    password: string\n}\n\nconst Login = ({change} : {change : (index:number)=>void }) => {\n\n    const { control, handleSubmit, errors } = useForm<FormProps>();\n    const [alertObj, setAlertObj] = useState<String[]>([\"success\", \"hello world\"])\n\n    const [login, options] = useMutation(LOGIN)\n\n    const onSubmit = (data:any) =>{\n        const {username, password} = data;\n\n        console.log(username, password);\n\n        login({\n            variables : {data : {identifier : username, password:password}}\n        }).then(res=>{\n            console.log(res);\n            message.success(\"Login sucessful. redirecting...\");\n            data_store.jwt = res.data.login.jwt;            \n        }).catch(err=>{\n            console.log(err.graphQLErrors[0].extensions.exception.data.data[0].messages[0].message);\n            message.error(err.graphQLErrors[0].extensions.exception.data.data[0].messages[0].message)\n        })\n        \n\n    }\n\n    return (\n        <div>\n            <Row>\n                <Headliner>Login</Headliner>\n            </Row>\n            <Row>\n                <Col>\n                    <FormControler\n                        child={<Input className=\"inputs\" bordered={false} placeholder=\"username or email\" />}\n                        control={control}\n                        name=\"username\"\n                    />\n\n                </Col>\n            </Row>\n            <div style={{height:30}} />\n            <Row>\n                <Col>\n                    <FormControler\n                        child={<Input  className=\"inputs\" type=\"password\" bordered={false} placeholder=\"password\" />}\n                        control={control}\n                        name=\"password\"\n                    />\n\n                </Col>\n            </Row>\n            <div style={{height:30}} />\n            <Row>\n                <Col>\n                    <div onClick={()=> handleSubmit(onSubmit)()} className=\"btn \">Login</div>\n                </Col>\n            </Row>\n            <div style={{height:30}} />\n            <Row>\n                <Col>\n                    <span className=\"muted\">Dont have an account? </span><span className=\"action-link\" onClick={() => change(1)}>we got you!</span>\n                </Col> \n            </Row>\n        </div>\n    )\n}\n\nexport default observer(Login)\n","/Users/w/Projects/React/wrg_v2/src/pages/auth/Register.tsx",["201","202","203"],"/Users/w/Projects/React/wrg_v2/src/data-layer/store/data_manager.tsx",["204","205"],"import { action, makeObservable, observable } from \"mobx\";\n\n\nclass Store{\n    jwt : string = \"\"\n    isLoggedIn = this.jwt != \"\";\n\n    constructor(){\n        makeObservable(this, {\n            jwt : observable,\n            isLoggedIn : observable\n        })\n\n        console.log(this.jwt);\n        \n    }\n}\n\nconst data_store = new Store()\nexport default data_store","/Users/w/Projects/React/wrg_v2/src/pages/Profile.tsx",["206","207","208","209","210","211","212","213"],{"ruleId":"214","severity":1,"message":"215","line":4,"column":17,"nodeType":"216","messageId":"217","endLine":4,"endColumn":26},{"ruleId":"214","severity":1,"message":"218","line":15,"column":26,"nodeType":"216","messageId":"217","endLine":15,"endColumn":31},{"ruleId":"214","severity":1,"message":"219","line":15,"column":33,"nodeType":"216","messageId":"217","endLine":15,"endColumn":40},{"ruleId":"214","severity":1,"message":"220","line":15,"column":42,"nodeType":"216","messageId":"217","endLine":15,"endColumn":48},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"214","severity":1,"message":"225","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":16},{"ruleId":"214","severity":1,"message":"226","line":17,"column":12,"nodeType":"216","messageId":"217","endLine":17,"endColumn":15},{"ruleId":"214","severity":1,"message":"227","line":17,"column":17,"nodeType":"216","messageId":"217","endLine":17,"endColumn":23},{"ruleId":"228","severity":1,"message":"229","line":23,"column":8,"nodeType":"230","endLine":23,"endColumn":34,"suggestions":"231"},{"ruleId":"214","severity":1,"message":"232","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":19},{"ruleId":"214","severity":1,"message":"233","line":24,"column":23,"nodeType":"216","messageId":"217","endLine":24,"endColumn":30},{"ruleId":"228","severity":1,"message":"234","line":47,"column":8,"nodeType":"230","endLine":47,"endColumn":14,"suggestions":"235"},{"ruleId":"221","replacedBy":"236"},{"ruleId":"223","replacedBy":"237"},{"ruleId":"214","severity":1,"message":"238","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":17},{"ruleId":"214","severity":1,"message":"239","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":13},{"ruleId":"221","replacedBy":"240"},{"ruleId":"223","replacedBy":"241"},{"ruleId":"214","severity":1,"message":"242","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":13},{"ruleId":"214","severity":1,"message":"243","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":18},{"ruleId":"214","severity":1,"message":"244","line":2,"column":19,"nodeType":"216","messageId":"217","endLine":2,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":4,"column":17,"nodeType":"216","messageId":"217","endLine":4,"endColumn":26},{"ruleId":"214","severity":1,"message":"245","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":16},{"ruleId":"214","severity":1,"message":"246","line":13,"column":12,"nodeType":"216","messageId":"217","endLine":13,"endColumn":17},{"ruleId":"247","severity":1,"message":"248","line":43,"column":38,"nodeType":"249","messageId":"250","endLine":43,"endColumn":40},{"ruleId":"221","replacedBy":"251"},{"ruleId":"223","replacedBy":"252"},{"ruleId":"214","severity":1,"message":"253","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":18},{"ruleId":"214","severity":1,"message":"254","line":2,"column":17,"nodeType":"216","messageId":"217","endLine":2,"endColumn":22},{"ruleId":"214","severity":1,"message":"255","line":12,"column":28,"nodeType":"216","messageId":"217","endLine":12,"endColumn":42},{"ruleId":"214","severity":1,"message":"239","line":4,"column":21,"nodeType":"216","messageId":"217","endLine":4,"endColumn":24},{"ruleId":"214","severity":1,"message":"256","line":4,"column":26,"nodeType":"216","messageId":"217","endLine":4,"endColumn":29},{"ruleId":"214","severity":1,"message":"257","line":12,"column":3,"nodeType":"216","messageId":"217","endLine":12,"endColumn":9},{"ruleId":"214","severity":1,"message":"258","line":13,"column":3,"nodeType":"216","messageId":"217","endLine":13,"endColumn":8},{"ruleId":"214","severity":1,"message":"259","line":14,"column":3,"nodeType":"216","messageId":"217","endLine":14,"endColumn":7},{"ruleId":"214","severity":1,"message":"260","line":16,"column":8,"nodeType":"216","messageId":"217","endLine":16,"endColumn":12},{"ruleId":"214","severity":1,"message":"261","line":18,"column":8,"nodeType":"216","messageId":"217","endLine":18,"endColumn":18},{"ruleId":"214","severity":1,"message":"262","line":20,"column":8,"nodeType":"216","messageId":"217","endLine":20,"endColumn":16},{"ruleId":"214","severity":1,"message":"225","line":22,"column":10,"nodeType":"216","messageId":"217","endLine":22,"endColumn":16},{"ruleId":"214","severity":1,"message":"263","line":24,"column":8,"nodeType":"216","messageId":"217","endLine":24,"endColumn":18},{"ruleId":"214","severity":1,"message":"256","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":13},{"ruleId":"214","severity":1,"message":"264","line":4,"column":39,"nodeType":"216","messageId":"217","endLine":4,"endColumn":50},{"ruleId":"214","severity":1,"message":"239","line":4,"column":52,"nodeType":"216","messageId":"217","endLine":4,"endColumn":55},{"ruleId":"214","severity":1,"message":"265","line":6,"column":10,"nodeType":"216","messageId":"217","endLine":6,"endColumn":38},{"ruleId":"214","severity":1,"message":"266","line":12,"column":11,"nodeType":"216","messageId":"217","endLine":12,"endColumn":13},{"ruleId":"247","severity":1,"message":"248","line":37,"column":18,"nodeType":"249","messageId":"250","endLine":37,"endColumn":20},{"ruleId":"247","severity":1,"message":"267","line":38,"column":18,"nodeType":"249","messageId":"250","endLine":38,"endColumn":20},{"ruleId":"214","severity":1,"message":"268","line":49,"column":7,"nodeType":"216","messageId":"217","endLine":49,"endColumn":34},{"ruleId":"221","replacedBy":"269"},{"ruleId":"223","replacedBy":"270"},{"ruleId":"214","severity":1,"message":"271","line":2,"column":39,"nodeType":"216","messageId":"217","endLine":2,"endColumn":46},{"ruleId":"214","severity":1,"message":"272","line":3,"column":17,"nodeType":"216","messageId":"217","endLine":3,"endColumn":24},{"ruleId":"214","severity":1,"message":"273","line":3,"column":26,"nodeType":"216","messageId":"217","endLine":3,"endColumn":34},{"ruleId":"214","severity":1,"message":"274","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":19},{"ruleId":"214","severity":1,"message":"218","line":17,"column":21,"nodeType":"216","messageId":"217","endLine":17,"endColumn":26},{"ruleId":"214","severity":1,"message":"275","line":19,"column":12,"nodeType":"216","messageId":"217","endLine":19,"endColumn":18},{"ruleId":"214","severity":1,"message":"276","line":19,"column":43,"nodeType":"216","messageId":"217","endLine":19,"endColumn":51},{"ruleId":"214","severity":1,"message":"277","line":19,"column":53,"nodeType":"216","messageId":"217","endLine":19,"endColumn":62},{"ruleId":"214","severity":1,"message":"278","line":30,"column":12,"nodeType":"216","messageId":"217","endLine":30,"endColumn":19},{"ruleId":"214","severity":1,"message":"218","line":30,"column":21,"nodeType":"216","messageId":"217","endLine":30,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":61,"column":33,"nodeType":"249","messageId":"250","endLine":61,"endColumn":35},{"ruleId":"247","severity":1,"message":"248","line":78,"column":29,"nodeType":"249","messageId":"250","endLine":78,"endColumn":31},{"ruleId":"214","severity":1,"message":"215","line":3,"column":17,"nodeType":"216","messageId":"217","endLine":3,"endColumn":26},{"ruleId":"214","severity":1,"message":"273","line":3,"column":28,"nodeType":"216","messageId":"217","endLine":3,"endColumn":36},{"ruleId":"214","severity":1,"message":"256","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":13},{"ruleId":"214","severity":1,"message":"239","line":4,"column":15,"nodeType":"216","messageId":"217","endLine":4,"endColumn":18},{"ruleId":"214","severity":1,"message":"279","line":6,"column":21,"nodeType":"216","messageId":"217","endLine":6,"endColumn":30},{"ruleId":"214","severity":1,"message":"280","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":11},{"ruleId":"214","severity":1,"message":"218","line":12,"column":21,"nodeType":"216","messageId":"217","endLine":12,"endColumn":26},{"ruleId":"214","severity":1,"message":"281","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"282","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":17},{"ruleId":"214","severity":1,"message":"283","line":3,"column":22,"nodeType":"216","messageId":"217","endLine":3,"endColumn":29},{"ruleId":"214","severity":1,"message":"284","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":21},{"ruleId":"214","severity":1,"message":"285","line":2,"column":39,"nodeType":"216","messageId":"217","endLine":2,"endColumn":51},{"ruleId":"214","severity":1,"message":"286","line":6,"column":7,"nodeType":"216","messageId":"217","endLine":6,"endColumn":12},{"ruleId":"247","severity":1,"message":"248","line":25,"column":27,"nodeType":"249","messageId":"250","endLine":25,"endColumn":29},{"ruleId":"247","severity":1,"message":"248","line":26,"column":27,"nodeType":"249","messageId":"250","endLine":26,"endColumn":29},{"ruleId":"214","severity":1,"message":"254","line":2,"column":26,"nodeType":"216","messageId":"217","endLine":2,"endColumn":31},{"ruleId":"214","severity":1,"message":"275","line":19,"column":36,"nodeType":"216","messageId":"217","endLine":19,"endColumn":42},{"ruleId":"214","severity":1,"message":"287","line":20,"column":12,"nodeType":"216","messageId":"217","endLine":20,"endColumn":20},{"ruleId":"214","severity":1,"message":"288","line":20,"column":22,"nodeType":"216","messageId":"217","endLine":20,"endColumn":33},{"ruleId":"214","severity":1,"message":"233","line":22,"column":19,"nodeType":"216","messageId":"217","endLine":22,"endColumn":26},{"ruleId":"214","severity":1,"message":"289","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":14},{"ruleId":"214","severity":1,"message":"290","line":8,"column":23,"nodeType":"216","messageId":"217","endLine":8,"endColumn":34},{"ruleId":"214","severity":1,"message":"233","line":23,"column":22,"nodeType":"216","messageId":"217","endLine":23,"endColumn":29},{"ruleId":"214","severity":1,"message":"291","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":16},{"ruleId":"247","severity":1,"message":"267","line":6,"column":27,"nodeType":"249","messageId":"250","endLine":6,"endColumn":29},{"ruleId":"214","severity":1,"message":"215","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"292","line":3,"column":44,"nodeType":"216","messageId":"217","endLine":3,"endColumn":50},{"ruleId":"214","severity":1,"message":"293","line":3,"column":52,"nodeType":"216","messageId":"217","endLine":3,"endColumn":57},{"ruleId":"214","severity":1,"message":"257","line":3,"column":73,"nodeType":"216","messageId":"217","endLine":3,"endColumn":79},{"ruleId":"214","severity":1,"message":"294","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":12},{"ruleId":"214","severity":1,"message":"295","line":11,"column":12,"nodeType":"216","messageId":"217","endLine":11,"endColumn":26},{"ruleId":"214","severity":1,"message":"296","line":11,"column":28,"nodeType":"216","messageId":"217","endLine":11,"endColumn":45},{"ruleId":"214","severity":1,"message":"297","line":13,"column":11,"nodeType":"216","messageId":"217","endLine":13,"endColumn":23},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'refetch' is assigned a value but never used.","'client' is assigned a value but never used.","no-native-reassign",["298"],"no-negated-in-lhs",["299"],"'Drawer' is defined but never used.","'num' is assigned a value but never used.","'setnum' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'ui_manager.drawerVisible'. Either exclude it or remove the dependency array. Outer scope values like 'ui_manager.drawerVisible' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["300"],"'BreadCrumbs' is defined but never used.","'options' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updatePst'. Either include it or remove the dependency array.",["301"],["298"],["299"],"'Comment' is defined but never used.","'Row' is defined but never used.",["298"],["299"],"'Posts' is defined but never used.","'useQuery' is defined but never used.","'List' is defined but never used.","'Button' is defined but never used.","'title' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["298"],["299"],"'Children' is defined but never used.","'Space' is defined but never used.","'mutationOption' is assigned a value but never used.","'Col' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Home' is defined but never used.","'Categories' is defined but never used.","'Category' is defined but never used.","'ui_manager' is defined but never used.","'NavDropdown' is defined but never used.","'setSyntheticTrailingComments' is defined but never used.","'bp' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'style' is assigned a value but never used.",["298"],["299"],"'Divider' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'errors' is assigned a value but never used.","'setValue' is assigned a value but never used.","'getValues' is assigned a value but never used.","'loading' is assigned a value but never used.","'Cardliner' is defined but never used.","'api' is defined but never used.","'Component' is defined but never used.","'PropTypes' is defined but never used.","'Control' is defined but never used.","'ButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","'pages' is assigned a value but never used.","'alertObj' is assigned a value but never used.","'setAlertObj' is assigned a value but never used.","'Crypto' is defined but never used.","'ApolloError' is defined but never used.","'action' is defined but never used.","'Layout' is defined but never used.","'Input' is defined but never used.","'Text' is defined but never used.","'onlineDatabase' is assigned a value but never used.","'setonlineDatabase' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},"Update the dependencies array to be: []",{"range":"306","text":"307"},"Update the dependencies array to be: [item, updatePst]",{"range":"308","text":"309"},[712,738],"[]",[1490,1496],"[item, updatePst]"]